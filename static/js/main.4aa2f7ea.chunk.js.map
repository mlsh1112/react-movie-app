{"version":3,"sources":["pages/movie.js","pages/home.js","pages/loading.js","App.js","reportWebVitals.js","index.js"],"names":["MoviePoster","poster","alt","src","title","className","MovieGenre","genre","movie","genres","synopsis","map","index","text","maxLine","ellipsis","trimRight","basedOn","home","state","handleChange","event","a","target","value","setState","this","movies","onChange","to","Component","loading","_getMovies","_callApi","fetch","then","res","json","data","catch","err","console","log","_renderMoives","filter","includes","title_english","medium_cover_image","id","_goHome","props","history","push","match","params","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aa2f7ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport './movie.css';\n\nfunction movie({title,poster,genres,synopsis}){\n    return(\n        <div className=\"Movie\">\n            <div className=\"Movie_Column\">\n                <MoviePoster poster={poster} alt={title}/>\n            </div>\n            <div className=\"Movie_Column\">\n                <h1>{title}</h1>\n                <div className=\"Movie_Genres\">\n                    {\n                        genres.map((genre,index)=>\n                            <MovieGenre genre={genre} key={index}/>)\n                    }\n                </div>\n                <p className=\"Movie_Synopsis\"> \n                 <LinesEllipsis\n                    text={synopsis}\n                    maxLine='3'\n                    ellipsis='...'\n                    trimRight\n                    basedOn='letters'\n                    />\n                </p>\n            </div>\n        </div>\n    )\n}\n\n//dump component\n//funtional component -> no state / no renser / no life cyle/ onlt return\nfunction MoviePoster({poster,alt}){\n    return(\n        <img src={poster} alt={alt} title={alt} className=\"Movie_poster\"/>\n    )\n}\nfunction MovieGenre({genre}){\n    return(\n        <span className=\"Movie_Genre\">{genre} </span>\n    )\n}\nmovie.propTypes={\n    title:PropTypes.string.isRequired,\n    poster:PropTypes.string.isRequired,\n    genres:PropTypes.array.isRequired,\n    synopsis:PropTypes.string.isRequired\n}\n\nMoviePoster.propTypes={\n    poster:PropTypes.string.isRequired,\n    alt:PropTypes.string.isRequired\n}\nexport default movie;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './home.css'\nclass home extends Component {\n    state={\n      genre:'Action'\n    }\n    handleChange=async(event)=>{\n        const genre = await event.target.value\n        this.setState({genre:genre})\n    }\n    render() {\n      const {movies}=this.state\n        return (\n            <div className='home'>\n              <h1>What movie should we watch today?</h1>\n              <h3>Pick Your Favorite Genre!</h3>\n                <form>\n                    <label>\n                    <select onChange={this.handleChange} className='select'>\n                        <option value=\"Action\">Action</option>\n                        <option value=\"Adventure\">Adventure</option>\n                        <option value=\"Fantasy\">Fantasy</option>\n                    </select>\n                    </label>\n                </form>\n                <div >\n                <Link className='btn' to={`loading/${this.state.genre}`}> FIND {this.state.genre} Movie!</Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default home;\n","import React, { Component } from 'react';\nimport Movie from './movie'\nimport './loading.css'\nclass loading extends Component {\n    state={}\n    componentDidMount(){\n        this._getMovies();\n      }\n    \n    _getMovies= async ()=>{ \n        const movies = await this._callApi(); \n        this.setState({\n          movies : movies\n      })\n    }\n    \n      _callApi=()=>{\n        return fetch('https://yts.mx/api/v2/list_movies.json?quality=3D')\n        .then(res=>res.json())\n        .then(json=>json.data.movies)\n        .catch(err=>console.log(err))\n      }\n    \n      _renderMoives = ({genre}) => {\n          const movies=this.state.movies.filter(movie =>  movie.genres.includes(genre) == true )\n          \n          const filtermovies= movies.map(movie =>{\n            return < Movie \n            title={movie.title_english} \n            poster={movie.medium_cover_image} \n            key={movie.id} \n            genres={movie.genres}\n            synopsis={movie.synopsis}\n            />\n            })\n          \n          return filtermovies\n      }\n      _goHome = () =>{\n        this.props.history.push('/')\n      }\n    render() {\n        const genre=this.props.match.params.genre\n        return (\n            <div className={this.state.movies?'loadsucess':'loading'}>\n                {\n                    this.state.movies? <button onClick={this._goHome} className='btnhome'>Go Home</button> : <div></div>\n                }\n                \n                <div className='movielist'>\n                {\n                    this.state.movies?\n                    this._renderMoives(this.props.match.params)\n                    :\n                    `Looking for ${genre} Movies... \n                    Please wait`\n                }\n                </div>\n            \n            </div>\n        );\n    }\n}\n\nexport default loading;\n","import { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport Movie from './pages/movie'\nimport home from './pages/home';\nimport loading from './pages/loading'\n\n// Render: componentWillMount() -> render() -> compoenetDidMount()\n// Update: componentWillReciveProps() {컴포넌트가 새로운 props를 받았다} -> shouldCompoenentUpdate()\nclass App extends Component {\n  render(){\n    return (\n        <div className=\"App\">\n          <BrowserRouter>\n          <Route exact path='/' component={home}/>\n          <Route exact path='/loading/:genre' component={loading}/>\n          </BrowserRouter>\n        </div>\n      );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}